{"version":3,"sources":["index.min.js","sound.js","bishop.js","utils.js","king.js","chess-pieces.js","knight.js","state.js","moves.js","castling.js","pawn.js","check.js","queen.js","en-passant.js","rook.js","promotion.js","active-player.js","draw.js","main.js","alert.js","modal.js","timer.js","slideshow.js","index.js"],"names":["_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","minLen","_arrayLikeToArray","Object","prototype","toString","call","slice","constructor","name","from","test","arr","len","arr2","_typeof","obj","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","configurable","writable","Sound","src","this","sound","document","createElement","setAttribute","style","display","play","stop","pause","BishopMoves","chessObjBox","chessObj","letters","rangeStart","undefined","rangeStop","rangeInterval","rowNumber","colNumber","scanXpoints","colLetter","piece","range","slopeM","scanPositiveDiagonal","map","scanNegativeDiagonal","removeOutOfBoundsPossibleMoves","arrayX","splitPossibleMoves","arrayX1","filterPossibleMoves","arrayX2","arrayY","arrayY1","arrayY2","possibleMoves","concat","possibleTargets","start","result","scanPoints","finalRowNo","Boolean","scanPointsAlphaNum","indexX","indexOf","firstArray","reverse","dataArray","passable","kingdom","KingMoves","bishopMoves","rookMoves","RookMoves","InitialChessPieceData","data","blackPawn","location","htmlcode","position","img","blackKing","blackQueen","blackBishop","blackKnight","blackRook","whitePawn","whiteKing","whiteQueen","whiteBishop","whiteKnight","whiteRook","KnightMoves","ChessGamePlayState","active_chess_player","active_chess_box_id","chess_obj","active_chess_obj","pawn_double_step_status","king_location","white","black","castling","king_side","king_move","rook_move","rook","status","space_empty","space_attacked","queen_side","checked","currently_checked","previous_move","checkmate","winner","players","remaining_time","GetPossibleMoves","pawnDoubleStepStatus","PawnMoves","QueenMoves","Castling","chessPieceMoved","hasCastling","state","console","log","rowRook","rookId","setInnerImg","toggleAlert","CheckCastling","CheckIfChecked","_castling$active_ches","checkKingQueenSide","side","checkEmptyBoxes","checkIfBoxesBeingChecked","getElementById","classList","add","locationIds","chessObjSimulation","JSON","parse","stringify","kingPiece","checkers","getCheckers","rowNumbersPMoves","scanXPoints","rawPossibleTargets","slope","scanX","y","scanCheckers","moves","positionString","inputObj","checkerRange","flat","locationId","mode","queenMoves","knightMoves","pawnMoves","queenCheck","rookCheck","bishopCheck","knightCheck","pawnCheck","kingMoves","kingCheck","UndoMove","kingdoms","kingChecked","getElementsByClassName","remove","currentCheckedKingdom","kingChecksafePMoves","checkKingAreaifChecked","contestTheChecker","includes","setTimeout","reload","safe","dangerous","CheckAreaIfChecked","previousBoxId","nextBoxId","EnPassant","chessPieceOriginalBox","pawnEnPassant","UpdateEnPassantState","Math","abs","scanPointsHorizontal","scanYpoints","scanPointsVertical","scanPointsAlphaNumX","scanPointsAlphaNumY","PawnPromotion","nextBox","innerHTML","SetActivePlayer","ACTIVE_CHESS_PLAYER","toUpperCase","ToggleActivePlayer","getClassListIncludes","ElementId","className","setInnerHtml","InputString","children","imgString","ChessGame","app","DrawChessTiles","colorInd","j","rowNumbers","colorBox","chessBox","box","appendChild","SetChessPieces","piecesInitialPlace","_piecesInitialPlace$k","rowKey","DrawChessPieces","initial","chessBoxSelected","chessPieceBox","replaceChild","UndrawChessPieces","removeChild","childNodes","AddClassesOfMovesOrTargetsSquares","move","RemoveClassesOfMovesOrTargetsSquares","selected","querySelectorAll","castles","_step","_iterator","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","Application","chessGame","chessData","btnUndo","btnRestart","chessBoxIds","dotSlide","initializeState","cGame","InitializeChessMap","_this$state","tiles","index","ReInitializeChessMap","ToggleActivePiece","thisId","_this$state2","classes","_GetPossibleMoves","PossibleMoveSelected","_this","_this$state3","previousBox","hasPossibleMove","hasPossibleTarget","chess_sound","pop","findKing","_this2","message","alertModal","welcomeModal","modal","closeButton","playerRow","playerTurn","gameButton","onclick","event","preventDefault","value1","value2","alert","player1","player2","innerText","toggle","countDownTimer","convertTimerToTime","timeInput","days","floor","hours","minutes","seconds","updateGameTime","idTimeDiv","_convertTimerToTime","countDownHour","countDownInterval","setInterval","active_time","currentSlide","showSlides","slideIndex","slides","dots","replace","App","tile","id","rotateUndo","dot","stringIn"],"mappings":"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","file":"index.min.js","sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/*\n    Alert for the following:\n    1. En Passant\n    2. Check\n    3. Catling\n    4. Pawn Promotion\n    5. Illegal moves\n*/ \n\nexport const toggleAlert = function(message) {\n    // selector\n    let alertModal = document.getElementById(\"alertModal\")\n    let alertContent = document.getElementById(\"alertModalContent\")\n\n    // Set inner html\n    alertContent.innerHTML =  `<h1>${message}</h1>`\n\n    // set display flex within 1 sec then go back to displa none\n    alertModal.style.display = \"flex\";\n    setTimeout(function() {\n        alertModal.style.display = \"none\";\n    }, 2000)\n\n}\n\n// export const toggleAlertwithCoundown","import { countDownTimer } from './timer.js'\nexport function welcomeModal(state){   \n\n    \n    // Get the modal\n    let modal = document.getElementById(\"welcomeModal\");\n\n    // Get the button that opens the modal\n    let closeButton = document.getElementById(\"start\");\n    \n    let playerRow = document.getElementById(\"playerRowId\")\n    let playerTurn = document.getElementById(\"playerTurnId\")\n    let gameButton = document.getElementById(\"gameButton\")\n    \n\n    // When the user clicks on <span> (x), close the modal\n    closeButton.onclick = (event) => {\n        event.preventDefault()\n        let value1 = document.getElementById(\"p1Name\").value\n        let value2 =  document.getElementById(\"p2Name\").value\n        if (value1 != \"\" & value2 != \"\"){\n\n            if (value1 === value2){\n                alert(\"Player names must be unique.\")\n            }\n            // update player names\n            state.players.white.name = value1;\n            state.players.black.name = value2;\n\n            modal.style.display = \"none\";\n\n            let player1 = document.getElementById(\"player-1\").children[0]\n            let player2 = document.getElementById(\"player-2\").children[0]\n\n            player1.innerText = state.players.white.name\n            player2.innerText = state.players.black.name\n\n            playerRow.classList.toggle(\"hidden\")\n            playerTurn.classList.toggle(\"hidden\")\n            gameButton.classList.toggle(\"hidden\")\n\n        // initialize time\n        countDownTimer(state);\n        } else {\n            alert(\"input missing\")\n        }\n    }\n\n}","function convertTimerToTime(timeInput) {\n    //timeInput must be in milliseconds format\n    let days = Math.floor(timeInput / (1000 * 60 * 60 * 24));\n    let hours = Math.floor((timeInput % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    let minutes = \"0\" + Math.floor((timeInput % (1000 * 60 * 60)) / (1000 * 60));\n    let seconds = \"0\" + Math.floor((timeInput % (1000 * 60)) / 1000);\n\n    return { days, hours, minutes, seconds}\n}\n\nfunction updateGameTime( timeInput , idTimeDiv ){\n    let { minutes, seconds } = convertTimerToTime( timeInput ) \n    document.getElementById(idTimeDiv).innerText = minutes.slice(-2) + \" : \" + seconds.slice(-2)  ;\n}\n\nexport function countDownTimer(state) {\n    // let { active_chess_player } = state;\n\n    // Set the date we're counting down to\n    let countDownHour   = 3600000 ; // 60 minutes * 60 seconds * 1000 -> \n    let countDownInterval = 1000; // 1 second * 1000 -> 1000 milliseconds or 1 second\n    let multiplier = 1000;\n\n    state.players.white.remaining_time  = countDownHour/2;\n    state.players.black.remaining_time  = countDownHour/2;\n    \n    // set initial time\n    updateGameTime( state.players.white.remaining_time , \"p1time\" )\n    updateGameTime( state.players.black.remaining_time , \"p2time\" )\n\n    // pause button\n    let pauseBtn = document.getElementById(\"pause\")\n\n    // Update the count down every 1 second\n    var x = setInterval(() => {\n        \n\n        // display game time;\n        updateGameTime( countDownHour , \"time\" )\n        countDownHour = countDownHour - countDownInterval;\n\n        // display player time;\n        let active_time = state.players[state.active_chess_player].remaining_time;\n        let active_player = state.active_chess_player == \"white\" ? \"p1time\" : \"p2time\";\n        // console.log(active_time, active_player )\n        updateGameTime( active_time , active_player )\n        state.players[state.active_chess_player].remaining_time = active_time - countDownInterval;\n\n        // if gamer reaches 0 time, that player lost the game\n    \n\n    }, countDownInterval);\n    // try {\n    //     let timer = new Timer(countDownHour, countDownInterval ,state)\n    //     timer.forLoop()\n    // } catch (error) { \n    //     console.log(error.message)\n    // }\n}\n\n// function Timer(wholeTimePeriod, Interval, state) {\n//     this.wholeTimePeriod = wholeTimePeriod\n//     this.interval = Interval\n//     this.pause = false\n\n//     this.action = function(){\n//         return new Promise(resolve => {\n//             setTimeout(() => {\n//                 updateGameTime( this.wholeTimePeriod , \"time\" )\n//                 this.wholeTimePeriod -= this.interval;\n\n//                 // display player time;\n//                 let active_time = state.players[state.active_chess_player].remaining_time;\n//                 let active_player = state.active_chess_player == \"white\" ? \"p1time\" : \"p2time\";\n//                 // console.log(active_time, active_player )\n//                 updateGameTime( active_time , active_player )\n//                 state.players[state.active_chess_player].remaining_time = active_time - this.interval;\n\n//                 console.log(this.wholeTimePeriod)\n//                 resolve\n//             }, this.Interval);\n//         }\n\n//         )     \n//     }\n\n//     this.pauseMethod = function () {\n//         this.pause = this.pause === true ? false : true\n//     }\n\n//     this.forLoop = async function(){\n//         if(this.pause === false){\n//             while (this.wholeTimePeriod > 0) {\n//                 await this.action()     \n//             }\n//         }\n//     }\n// }","\n// Automatic\n\n// var slideIndex = 0;\n\n// Thumbnail image controls\nfunction currentSlide(n) {\n  showSlides(slideIndex = n);\n}\n\n// export function showSlides() {\n//   var i;\n//   var slides = document.getElementsByClassName(\"mySlides\");\n//   for (i = 0; i < slides.length; i++) {\n//     slides[i].style.display = \"none\";\n//   }\n//   slideIndex++;\n//   if (slideIndex > slides.length) {slideIndex = 1}\n//   slides[slideIndex-1].style.display = \"block\";\n//   setTimeout(showSlides, 2000); // Change image every 2 seconds\n// }\n\n\n// Manual\n\nlet slideIndex = 1;\n// // Next/previous controls\n// function plusSlides(n) {\n//   showSlides(slideIndex += n);\n// }\n\n// // Thumbnail image controls\n// function currentSlide(n) {\n//   showSlides(slideIndex = n);\n// }\n\nexport function showSlides(n) {\n  var i;\n  var slides = document.getElementsByClassName(\"mySlides\");\n  var dots = document.getElementsByClassName(\"dot\");\n  if (n > slides.length) {slideIndex = 1}\n  if (n < 1) {slideIndex = slides.length}\n  for (i = 0; i < slides.length; i++) {\n      slides[i].style.display = \"none\";\n  }\n  for (i = 0; i < dots.length; i++) {\n      dots[i].className = dots[i].className.replace(\" active\", \"\");\n  }\n  slides[slideIndex-1].style.display = \"block\";\n  dots[slideIndex-1].className += \" active\";\n}\n"]}